// @flow

import {OKBlock} from "@all-user/ok-blocks";
// import type {OKPatternsDefinition, OKBlockOptions, OKBlockConstructorOptions, OKPatternsFormationTable, OKPatternsTransitionProps} from "@all-user/ok-blocks";
// declare class Class1 extends Element<> {
//
//   accessKey: string;
//   accessKeyLabel: string;
//   className: string;
//   contentEditable: string;
//   contextMenu: ?HTMLMenuElement;
//   dataset: {[key: string]: string};
//   dir: "ltr" | "trl" | "auto";
//   draggable: boolean;
//   dropzone: any;
//   hidden: boolean;
//   id: string;
//   innerHTML: string;
//   isContentEditable: boolean;
//   itemProp: any;
//   itemScope: boolean;
//   itemType: any;
//   itemValue: Object;
//   lang: string;
//   offsetHeight: number;
//   offsetLeft: number;
//   offsetParent: Element;
//   offsetTop: number;
//   offsetWidth: number;
//   onabort: ?Function;
//   onblur: ?Function;
//   oncancel: ?Function;
//   oncanplay: ?Function;
//   oncanplaythrough: ?Function;
//   onchange: ?Function;
//   onclick: ?Function;
//   oncuechange: ?Function;
//   ondblclick: ?Function;
//   ondurationchange: ?Function;
//   onemptied: ?Function;
//   onended: ?Function;
//   onerror: ?Function;
//   onfocus: ?Function;
//   oninput: ?Function;
//   oninvalid: ?Function;
//   onkeydown: ?Function;
//   onkeypress: ?Function;
//   onkeyup: ?Function;
//   onload: ?Function;
//   onloadeddata: ?Function;
//   onloadedmetadata: ?Function;
//   onloadstart: ?Function;
//   onmousedown: ?Function;
//   onmouseenter: ?Function;
//   onmouseleave: ?Function;
//   onmousemove: ?Function;
//   onmouseout: ?Function;
//   onmouseover: ?Function;
//   onmouseup: ?Function;
//   onmousewheel: ?Function;
//   onpause: ?Function;
//   onplay: ?Function;
//   onplaying: ?Function;
//   onprogress: ?Function;
//   onratechange: ?Function;
//   onreadystatechange: ?Function;
//   onreset: ?Function;
//   onresize: ?Function;
//   onscroll: ?Function;
//   onseeked: ?Function;
//   onseeking: ?Function;
//   onselect: ?Function;
//   onshow: ?Function;
//   onstalled: ?Function;
//   onsubmit: ?Function;
//   onsuspend: ?Function;
//   ontimeupdate: ?Function;
//   ontoggle: ?Function;
//   onvolumechange: ?Function;
//   onwaiting: ?Function;
//   properties: any;
//   spellcheck: boolean;
//   style: CSSStyleDeclaration;
//   tabIndex: number;
//   title: string;
//   translate: boolean;
//   blur(): void;
//   click(): void;
//   focus(): void;
//   forceSpellcheck(): void;
//   getBoundingClientRect(): ClientRect;
// }
// declare interface Class3 {
//
//   displayTime?: number;
//   distinct?: boolean;
//   duration?: number;
//   easing?: string;
//   loop?: boolean;
//   random?: boolean;
//   size?: number;
// }
// declare interface Class2 {
//
//   _BASE_DOM: Class1;
//   _DEFAULT_OPTIONS: Class3;
//   _TRANSITION_PROPS: Array<"all" | "backdrop-filter" | "background" | "background-color" | "background-position" | "background-size" | "border" | "border-bottom" | "border-bottom-color" | "border-bottom-left-radius" | "border-bottom-right-radius" | "border-bottom-width" | "border-color" | "border-left" | "border-left-color" | "border-left-width" | "border-radius" | "border-right" | "border-right-color" | "border-right-width" | "border-top" | "border-top-color" | "border-top-left-radius" | "border-top-right-radius" | "border-top-width" | "border-width" | "bottom" | "box-shadow" | "caret-color" | "clip" | "clip-path" | "color" | "column-count" | "column-gap" | "column-rule" | "column-rule-color" | "column-rule-width" | "column-width" | "columns" | "filter" | "flex" | "flex-basis" | "flex-grow" | "flex-shrink" | "font" | "font-size" | "font-size-adjust" | "font-stretch" | "font-variation-settings" | "font-weight" | "grid-column-gap" | "grid-gap" | "grid-row-gap" | "height" | "left" | "letter-spacing" | "line-height" | "margin" | "margin-bottom" | "margin-left" | "margin-right" | "margin-top" | "mask" | "mask-position" | "mask-size" | "max-height" | "max-width" | "min-height" | "min-width" | "motion-offset" | "motion-rotation" | "object-position" | "opacity" | "order" | "outline" | "outline-color" | "outline-offset" | "outline-width" | "padding" | "padding-bottom" | "padding-left" | "padding-right" | "padding-top" | "perspective" | "perspective-origin" | "right" | "scroll-snap-coordinate" | "scroll-snap-destination" | "shape-image-threshold" | "shape-margin" | "shape-outside" | "tab-size" | "text-decoration" | "text-decoration-color" | "text-emphasis" | "text-emphasis-color" | "text-indent" | "text-shadow" | "top" | "transform" | "transform-origin" | "vertical-align" | "visibility" | "width" | "word-spacing" | "z-index">;
//   _formationTable: {[_: string]: [string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"], string | [string, "pos_0_0" | "pos_1_0" | "pos_2_0" | "pos_3_0" | "pos_0_1" | "pos_1_1" | "pos_2_1" | "pos_3_1" | "pos_0_2" | "pos_1_2" | "pos_2_2" | "pos_3_2"]]};
// }
// declare interface Class4 extends Class3 {
//
//   pattern: ?string;
// }
// declare class Class0 {
//   static patterns: {[pattern: string]: Class2};
//   static define(name: string, patternDefinition: Class2): void;
//
//   _displayTime: number;
//   _distinct: boolean;
//   _duration: number;
//   _eaasing: string;
//   _loop: boolean;
//   _random: boolean;
//   allValidChars: Array<string>;
//   cancelAnimation: Function;
//   char: ?string;
//   displayTime: number;
//   distinct: boolean;
//   dom: Class1;
//   duration: number;
//   easing: string;
//   isAnimating: boolean;
//   loop: boolean;
//   options: {displayTime: number, distinct: boolean, duration: number, easing: string, loop: boolean, random: boolean, size: number};
//   patternDefinition: Class2;
//   pattern: string;
//   random: boolean;
//   resumeAnimate: ?Function;
//   size: number;
//   animateFromString(str: string, opt?: Class3): void;
//   appendTo(parent: Class1): void;
//   constructor(c: string, options?: Class4): void;
//   resumeAnimate(): void;
//   stopAnimate(): void;
//   to(c: string): boolean;
// }
declare class ExtendedByOlympic2020Pattern extends OKBlock {

}

declare module.exports: (OKBlockBase: Class<OKBlock>) => ExtendedByOlympic2020Pattern;
